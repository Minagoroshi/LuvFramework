package luvexploitation

import (
	"runtime"
	"time"
)

// CpuLoadGen gives the Cpu work to do in order to generate load on the system
func CpuLoadGen(cores int, interval string, percentage int, loop bool) {
	// Set the number of cores to use
	runtime.GOMAXPROCS(cores)
	unitHundredsOfMicrosecond := 1000
	runMicrosecond := unitHundredsOfMicrosecond * percentage

	//Generate load and Lock thread
	for i := 0; i < cores; i++ {
		go func() {
			runtime.LockOSThread()
			for {
				begin := time.Now()
				for {
					if time.Since(begin) > time.Duration(runMicrosecond)*time.Microsecond {
						break
					}
				}
			}
		}()
	}

	//string to time
	t, _ := time.ParseDuration(interval)
	time.Sleep(t * time.Second)

	if loop {
		CpuLoadGen(cores, interval, percentage, loop)
	}
}
